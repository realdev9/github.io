# 객체 변경 감지에 관한 주의사항

> 모던 JavaScript의 한계로 Vue는 속성 추가 및 삭제를 감지하지 못합니다.

```html
<div id="app">
  <p>{{ a }}</p>
  <p>{{ b }}</p>
</div>
```

```javascript
var vm = new Vue({
  el: '#app',
  data: {
    a: 1,
  },
});
// vm.a 는 반응형입니다.

vm.b = 2;
// vm.b 는 반응형이 아닙니다.
```

> Vue는 이미 만들어진 인스턴스에 새로운 루트레벨의 반응형 속성을 동적으로 추가하는 것을 허용하지 않습니다.  
> 그러나 Vue.set(object, propertyName, value) 메소드를 사용하여 중첩된 객체에 반응형 속성을 추가할 수 있습니다.

```html
<div id="app">
  <p>{{ userProfile }}</p>
</div>
```

```javascript
var vm = new Vue({
  el: '#app',
  data: {
    userProfile: {
      name: 'Anika',
    },
  },
});
```

다음과 같이 중첩된 userProfile 객체에 새로운 속성 age를 추가합니다.

```javascript
Vue.set(vm.userProfile, 'age', 27);
```

인스턴스 메소드인 vm.\$set를 사용할 수도 있습니다. 이는 전역 Vue.set의 별칭입니다.

```javascript
vm.$set(vm.userProfile, 'age', 30);
```

때로는 Object.assign()이나 \_.extend()를 사용해 기존의 객체에 새 속성을 할당할 수 있습니다. 이 경우 두 객체의 속성을 사용해 새 객체를 만들어야 합니다.

새로운 반응형 속성을 다음과 같이 추가합니다.

```javascript
vm.userProfile = Object.assign({}, vm.userProfile, {
  age: 27,
  favoriteColor: 'Vue Green',
});
```

## VueJS - Mixins

## VueJS - Render Function -slot
